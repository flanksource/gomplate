// Code generated by gencel. DO NOT EDIT.

package funcs

import "github.com/google/cel-go/cel"
import "github.com/google/cel-go/common/types"
import "github.com/google/cel-go/common/types/ref"

var gcpMetaGen = cel.Function("gcp.Meta",
	cel.Overload("gcp.Meta_string_string",

		[]*cel.Type{
			cel.StringType, cel.DynType,
		},
		cel.DynType,
		cel.FunctionBinding(func(args ...ref.Val) ref.Val {

			var x GcpFuncs
			list := transferSlice[string](args[1].(ref.Val))

			a0, a1 := x.Meta(args[0].Value().(string), list...)
			return types.DefaultTypeAdapter.NativeToValue([]any{
				a0, a1,
			})

		}),
	),
)
